# .github/workflows/preview.yml
name: Deploy PR previews

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
    branches:
      - development
    base:
      - main

concurrency: preview-${{ github.ref }}


# This job installs dependencies, builds the book, and deploys the html
jobs:
  build-and-preview-book:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Get PR number
      run: echo "Your PR is ${PR}"
      env:
        PR: ${{ github.event.pull_request.number }}
    - name: üì¶ Cache Conda Packages
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda-linux-64.lock') }}
    - name: üêç Set up Conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: false
        activate-environment: L96M2lines
        environment-file: conda-linux-64.lock
    - name: üëÄ Check Conda environment
      shell: bash -l {0}
      run: |
          conda info
          conda list
    - name: üì¶ Cache Notebooks
      uses: actions/cache@v2
      with:
        path: _build/.jupyter_cache
        key: notebook_cache-${{hashFiles('_toc.yml', '_config.yml', 'environment.yaml') }}
    - name: üìñ Build the book
      shell: bash -l {0}
      run:  |
        mkdir -p _notebook_cache
        jupyter-book build .
    - name: üìñ Show logs from the book build
      shell: bash -l {0}
      run:  |
        find _build/html -name "*.log" -print -exec cat {} \;
    - name: üöÄ Deploy Preview to GitHub Pages
      if: github.ref == 'refs/heads/development'
      uses: rossjrw/pr-preview-action@v1
      with:
        source-dir: _build/html


# name: Preview PR Changes

# on:
#   pull_request:
#     branches:
#       - main

# # This job installs dependencies, builds the book, and deploys the html
# jobs:
#   build-and-deploy-book:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         python-version: [3.9]
#     steps:
#     - uses: actions/checkout@v2
#     - name: Get PR number
#       run: echo "Your PR is ${PR}"
#       env:
#         PR: ${{ github.event.pull_request.number }}
#     - name: üì¶ Cache Conda Packages
#       uses: actions/cache@v2
#       env:
#         # Increase this value to reset cache if etc/example-environment.yml has not changed
#         CACHE_NUMBER: 0
#       with:
#         path: ~/conda_pkgs_dir
#         key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda-linux-64.lock') }}
#     - name: üêç Set up Conda environment
#       uses: conda-incubator/setup-miniconda@v2
#       with:
#         auto-update-conda: false
#         activate-environment: L96M2lines
#         environment-file: conda-linux-64.lock
#     - name: üëÄ Check Conda environment
#       shell: bash -l {0}
#       run: |
#           conda info
#           conda list
#     - name: üì¶ Cache Notebooks
#       uses: actions/cache@v2
#       with:
#         path: _build/.jupyter_cache
#         key: notebook_cache-${{hashFiles('_toc.yml', '_config.yml', 'environment.yaml') }}
#     - name: üìñ Build the book
#       shell: bash -l {0}
#       run:  |
#         mkdir -p _notebook_cache
#         jupyter-book build .
#     - name: üìñ Show logs from the book build
#       shell: bash -l {0}
#       run:  |
#         find _build/html -name "*.log" -print -exec cat {} \;
#     - name: Deploy preview
#       uses: peaceiris/actions-gh-pages@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: _build/html
#         publish_branch: preview-${{ github.event.pull_request.number }}
#         keep_files: false
#     - name: Add comment with preview link
#       uses: actions/github-script@v4
#       with:
#         github-token: ${{ secrets.GITHUB_TOKEN }}
#         script: |
#           const previewUrl = `https://${process.env.GITHUB_REPOSITORY}.github.io/${process.env.GITHUB_REPOSITORY.split('/')[1]}/preview-${process.env.PR_NUMBER}/`;
#           github.issues.createComment({
#             issue_number: process.env.PR_NUMBER,
#             owner: process.env.GITHUB_REPOSITORY.split('/')[0],
#             repo: process.env.GITHUB_REPOSITORY.split('/')[1],
#             body: `The preview for this pull request is now available at ${previewUrl}`
#           });
#       env:
#         PR_NUMBER: ${{ github.event.pull_request.number }}
